#!/bin/bash

hn="$(hostname -s)"

if [ "$hn" = "node-13" ]; then
  archs="x86_pentium2"
elif [ "$hn" = "node-14" ]; then
  archs="x86_pentium4"
elif [ "$hn" = "node-7" ]; then
  archs="x86_pentium3"
fi

apps="samba"
# if app is cross and noarch, use target="cross-noarch"
# otherwise use "cross"
type="target"

for p in $apps; do
  if [ -d "/home/build/userland/$p/RPMS" ]; then
    rm -rf /home/build/userland/$p/RPMS 
  fi
  if [ -d "/home/build/userland/$p/SRPMS" ]; then
    rm -rf /home/build/userland/$p/SRPMS
  fi
  mkdir -p /mvista/dev_area/logs/mvlcge2.1.0-updates/$p
  for a in $archs; do
     rm -rf /opt/mvlcge/*
     cp -a /var/lib/rpm /opt/mvlcge/rpmdb
     cd /mvista/dev_area/mvlcge2.1.0/host/common/optional/
     rpm -i *.mvl --dbpath /opt/mvlcge/rpmdb
     cd ..
     rpm -i *file* *ldd* *python* *setperm* *targetconf* --dbpath /opt/mvlcge/rpmdb
     cd ../cluster
     rpm -i *.mvl --dbpath /opt/mvlcge/rpmdb
     cd ../../$a/cross/common
     ls | grep -v glib | xargs rpm -i --dbpath /opt/mvlcge/rpmdb
     cd ../cluster
     if [ "$p" = "gcc" ] && [ "$type" = "cross" ]; then
      rpm -i *binutils* *hardhatutils* *ksymoops* *ldd* *linux86* --dbpath /opt/mvlcge/rpmdb
     else
       ls | grep -v gdb | xargs rpm -i --dbpath /opt/mvlcge/rpmdb
     fi
     cd ../../target
     if [ "$p" = "glibc" ]; then
       rpm -i --ignorearch *filesystem* *kernel-headers* --dbpath /opt/mvlcge/rpmdb
     elif [ "$p" = "gcc" ]; then
       rpm -i --ignorearch *filesystem* *kernel-headers* *binutils* *glibc* *ncurses* --dbpath /opt/mvlcge/rpmdb
     else
       rpm -i --ignorearch *filesystem* *kernel-headers* *binutils* *glibc* *ncurses* *cpp* *gcc* *g++* *libstdc++* *protoize* *flex* *libwrap* *zlib* *libpam* *libtool* --dbpath /opt/mvlcge/rpmdb
     #cd /mvista/dev_area/mvlcge2.1.0-updates/gcc/$a/target/
     fi	
     cd ~/userland/$p
     if [ "$type" = "cross" ]; then
      if [ "$p" = "gcc" ]; then
       ~/bin/mkappnoclean `pwd` mvlcge2.1.0 $a cross-"$p"2.95.3 /opt/mvlcge/rpmdb ~/.cgerpmrc > /mvista/dev_area/logs/mvlcge2.1.0-updates/$p/$a.log 2>&1
      else
       ~/bin/mkappnoclean `pwd` mvlcge2.1.0 $a cross-$p /opt/mvlcge/rpmdb ~/.cgerpmrc > /mvista/dev_area/logs/mvlcge2.1.0-updates/$p/$a.log 2>&1
      fi
       mkdir -p /mvista/dev_area/mvlcge2.1.0-updates/$p/$a/cross/common
       mkdir -p /mvista/dev_area/mvlcge2.1.0-updates/$p/SRPMS
       cp -f SRPMS/* /mvista/dev_area/mvlcge2.1.0-updates/$p/SRPMS
       cp /home/build/userland/$p/RPMS/noarch/*$a* /mvista/dev_area/mvlcge2.1.0-updates/$p/$a/cross/common
     elif [ "$type" = "target" ]; then
       if [ "$p" = "gcc" ]; then
       ~/bin/mkappnoclean `pwd` mvlcge2.1.0 $a target-"$p"2.95.3 /opt/mvlcge/rpmdb ~/.cgerpmrc > /mvista/dev_area/logs/mvlcge2.1.0-updates/$p/$a.log 2>&1
       else
       ~/bin/mkappnoclean `pwd` mvlcge2.1.0 $a target-$p /opt/mvlcge/rpmdb ~/.cgerpmrc > /mvista/dev_area/logs/mvlcge2.1.0-updates/$p/$a.log 2>&1
       fi	
       mkdir -p /mvista/dev_area/mvlcge2.1.0-updates/$p/$a/target
       mkdir -p /mvista/dev_area/mvlcge2.1.0-updates/$p/SRPMS
       cp -f /home/build/userland/$p/SRPMS/* /mvista/dev_area/mvlcge2.1.0-updates/$p/SRPMS
       cp /home/build/userland/$p/RPMS/$a/* /mvista/dev_area/mvlcge2.1.0-updates/$p/$a/target
     fi
  done
done
