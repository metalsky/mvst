#!/usr/bin/python

import sys, os, string

if len(sys.argv) == 1:
  print 'usage: %s %s %s %s %s %s %s' % (sys.argv[0],'<app>','<apptype>','<bug>','<test|copy>','<product>','<build_id>')
  sys.exit(1)

app = sys.argv[1]
apptype = sys.argv[2]
bug = sys.argv[3]
runtype = sys.argv[4]
product = sys.argv[5]
id = sys.argv[6]
cd = os.getcwd()


if product == 'mvl21':
  cpfrom = '/mvista/dev_area/mvl2.1.0-updates'
  dirs = 	{
	'mvl2.1-arm':				['arm_720t_le','arm_920t_le'],
	'mvl2.1-mips':				['mips_fp_be','mips_fp_le','mips_lexra_fp_be','mips_sb1_fp_be'],
	'mvl2.1-ppc':				['ppc_405','ppc_74xx','ppc_7xx','ppc_82xx','ppc_8xx'],
	'mvl2.1-sh':				['sh_sh3_be','sh_sh3_le','sh_sh4_be','sh_sh4_le'],
	'mvl2.1-strngarm':			['arm_sa_be','arm_sa_le','arm_xscale_le','arm_xscale_be'],
	'mvl2.1-x86':				['x86_486','x86_586','x86_crusoe','x86_pentium2','x86_pentium3'],
	'mvl2.1-sony':				['mips_sony_fp_le','mips_sony_fp_be']
         }
elif product == 'mvlcge21':
  cpfrom = '/mvista/dev_area/mvlcge2.1.0-updates'
  dirs = 	{
	'mvlcge2.1.0':				['x86_pentium2','x86_pentium3','x86_pentium4']
     		}
elif product == 'mvl30':
  cpfrom = '/mvista/dev_area/mvl3.0.0-updates'
  dirs = 	{
	'mvl3.0-arm':				['arm_720t_le','arm_920t_le'],
	'mvl3.0-mips':				['mips_fp_be','mips_fp_le','mips_nfp_le'],
	'mvl3.0-ppc':				['ppc_405','ppc_74xx','ppc_7xx','ppc_82xx','ppc_8xx'],
	'mvl3.0-sh':				['sh_sh3_be','sh_sh3_le','sh_sh4_be','sh_sh4_le'],
	'mvl3.0-strngarm':			['arm_sa_be','arm_sa_le','arm_xscale_be','arm_xscale_le'],
	'mvl3.0-x86':				['x86_486','x86_586','x86_crusoe','x86_pentium2','x86_pentium3'],
	'mvl3.0-xtensa':			['xtensa_linux_be','xtensa_linux_le']
		}
elif product == 'mvl30-sony':
  cpfrom = '/mvista/dev_area/mvl300_sony_update1-updates'
  dirs = 	{
	'mvl3.0-sony-update1':			['mips_fp_be','arm_920t_le','mips_fp_le',
                                                 'x86_586','x86_pentium3']
                }
elif product == 'mvlcge30':
  cpfrom = '/mvista/dev_area/mvlcge3.0.0-updates'
  dirs = 	{
	'mvlcge3.0.0':				['x86_pentium2','x86_pentium3','x86_pentium4']
		}
elif product == 'mvlcee30-omap':
  cpfrom = '/mvista/dev_area/cee/mvlcee3.0/mvlcee300_omap161x_innovator-updates'
  dirs = 	{
	'mvlcee3.0-ti-omap161x_innovator':	['arm_v4t_le',]
	}
elif product == 'mvlcee30-innovator':
  cpfrom = '/mvista/dev_area/cee/mvlcee3.0/mvlcee300_innovator-updates'
  dirs = 	{
	'mvlcee3.0-ti-innovator':		['arm_v4t_le']
		}
elif product == 'mvlcee30-405lp':
  cpfrom = '/mvista/dev_area/mvlcee300_405lp_ref-updates'
  dirs = 	{
	'mvlcee3.0-ibm-405lp_ref':		['ppc_405',]
  		}
elif product == 'mvlcee30-mainstone':
  cpfrom = '/mvista/dev_area/cee/mvlcee3.0/mvlcee300_mainstone-updates'
  dirs = 	{
	'mvlcee3.0-intel-mainstone':		['arm_iwmmxt_le',]
		}
elif product == 'mvl31':
  if apptype == 'foundation':
    cpfrom = '/mvista/release_area/foundation/foundation_one-updates'
  elif apptype == 'mvg': 
    cpfrom = '/mvista/dev_area/mvg/mvg3.1-updates'
  else:
    apptype = app
    cpfrom = '/mvista/dev_area/pro/mvl310-updates'
  dirs = 	{
	'mvl3.1-arm':				['arm_720t_le','arm_v4t_le'],
	'mvl3.1-mips':				['mips_fp_be','mips_fp_le','mips_nfp_le'],
	'mvl3.1-ppc':				['ppc_405','ppc_74xx','ppc_7xx','ppc_82xx','ppc_8xx','ppc_440'],
	'mvl3.1-sh':				['sh_sh3_be','sh_sh3_le','sh_sh4_be','sh_sh4_le'],
	'mvl3.1-strngarm':			['arm_sa_le','arm_xscale_be','arm_xscale_le'],
	'mvl3.1-x86':				['x86_486','x86_586','x86_crusoe','x86_pentium2','x86_pentium3','x86_pentium4'],
#	'mvl3.1-xtensa':			['xtensa_linux_be','xtensa_linux_le']
		}

elif product == 'mvl31special': #for those little 440ep things
  cpfrom = '/mvista/release_area/foundation/foundation_one-updates'
  dirs = {
         'mvl3.1-ppc':                           ['ppc_85xx','ppc_440ep']
         }


elif product == 'mvlcge31':
  if apptype == 'foundation':
    cpfrom = '/mvista/release_area/foundation/foundation_one-updates'
  else:
    apptype = string.split(app,'.')[0]
    cpfrom = '/mvista/dev_area/cge/mvlcge310-updates'
  dirs = 	{
	'mvlcge3.1-x86':			['x86_pentium2','x86_pentium3','x86_pentium4'],
	#'mvlcge3.1-em64t':			['x86_em64t'],
	#'mvlcge3.1-amd64':			['x86_amd64'],
	'mvlcge3.1-ppc':			['ppc_440','ppc_7xx','ppc_74xx','ppc_82xx'],
	'mvlcge3.1-strngarm':			['arm_xscale_be']
		}
elif product == 'mvlcee31':
  if apptype == 'foundation':
    cpfrom = '/mvista/release_area/foundation/foundation_one-updates'
  else:
    apptype = string.split(app,'.')[0]
    cpfrom = '/mvista/dev_area/cee/mvlcee310-updates'
  dirs = 	{
	'mvlcee3.1-ti-omap16xx_gsm_gprs':	['arm_v4t_le',],
	'mvlcee3.1-hitachi-ms7300cp01':		['sh_sh3_le',],
	'mvlcee3.1-ti-omap-730_gsm_gprs':	['arm_v4t_le',],
	'mvlcee3.1-intel-mainstone-pxa27x':	['arm_iwmmxt_le',],
	'mvlcee3.1-motorola-mx21ads':		['arm_v4t_le',],
	'mvlcee3.1-hitachi-ms73180cp01':	['sh_sh3_le',],
  	'mvlcee3.1-ti-omap2420_gsm_gprs':       ['arm_v5t_le',],  
  	'mvlcee3.1-ti-omap2430_sdp':            ['arm_v5t_le',],  
        'mvlcee3.1-samsung-24a0': 		['arm_v4t_le',] #also gets 2440
	#'mvlcee3.1-x86':			['x86_586',]
		}
elif product == 'mvl400':
  cpfrom = '/mvista/dev_area/foundation/foundation_two-updates'
  dirs = {
         'mvl4.0.0-x86':           ['x86_586',],
         'mvl4.0.0-ppc400':        ['ppc_440',],
         'mvl4.0.0-ppc700':        ['ppc_7xx',],
         'mvl4.0.0-ppc7400':       ['ppc_74xx',],
         'mvl4.0.0-xscale':        ['arm_xscale_be',],
         'mvl4.0.0-armv5':         ['arm_v5t_le',],
         'mvl4.0.0-mipsfp':        ['mips2_fp_be', 'mips2_fp_le',],
         'mvl4.0.0-ppc64':         ['ppc_9xx',] 
         }
elif product == 'mvlcge401':
  cpfrom = '/mvista/dev_area/cge/mvlcge401-updates'
#  cpfrom = '/mvista/release_area/foundation/foundation_two-updates'
  dirs = {
         'mvlcge4.0.1-x86':        ['x86_pentium3','x86_pentium4'],
         'mvlcge4.0.1-ppc700':     ['ppc_7xx'],
         'mvlcge4.0.1-ppc7400':    ['ppc_74xx'],
         'mvlcge4.0.1-ppc900':     ['ppc_9xx'],
         'mvlcge4.0.1-em64t':      ['x86_em64t'],
         'mvlcge4.0.1-ppc85xx':    ['ppc_85xx']
         }


elif product == 'mvl401':
  cpfrom = '/mvista/dev_area/pro/mvl401-updates'
  dirs = {
         'mvl4.0.1-x86':                ['x86_586',],
         'mvl4.0.1-powerpc400':         ['ppc_440','ppc_440ep','ppc_405'],
         'mvl4.0.1-powerpc700':         ['ppc_7xx',],
         'mvl4.0.1-powerpc7400':        ['ppc_74xx',],
         'mvl4.0.1-xscale':             ['arm_xscale_be',],
         'mvl4.0.1-armv5':              ['arm_v5t_le',],
         'mvl4.0.1-ti-davinci_evm':     ['arm_v5t_le',],
         'mvl4.0.1-mipsfp':             ['mips2_fp_be', 'mips2_fp_le',],
         'mvl4.0.1-mipsnfp':            ['mips2_nfp_le',],
         'mvl4.0.1-powerpc64':          ['ppc_9xx',],
         'mvl4.0.1-mips64fp':           ['mips64_fp_be',],
         'mvl4.0.1-powerquiccii':       ['ppc_82xx',],
         'mvl4.0.1-powerquicci':        ['ppc_8xx',],
         'mvl4.0.1-powerquicciii':      ['ppc_85xx',]
         }
elif product == 'mobilinux402':
  cpfrom = '/mvista/dev_area/mobilinux/mobilinux400-updates'
  dirs = {
	'mobilinux4.0.2-arm_iwmmxt': ['arm_iwmmxt_le',],
	'mobilinux4.0.2-armv6': ['arm_v6_vfp_le',],
        'mobilinux4.0.2-armv5': ['arm_v5t_le',],
	'mobilinux4.0.2-philips_armv5':['arm_v5t_le',]
	}

elif product == 'mobilinux410':
  cpfrom = '/mvista/dev_area/mobilinux/mobilinux410-updates'
  dirs = {
	'mobilinux4.1.0-arm_iwmmxt': ['arm_iwmmxt_le','arm_iwmmxt_le_uclibc',],
	'mobilinux4.1.0-armv6': ['arm_v6_vfp_le','arm_v6_vfp_le_uclibc',],
	'mobilinux4.1.0-ti-omap2430_sdp': ['arm_v6_vfp_le','arm_v6_vfp_le_uclibc'],

	}
dirname = ''
if apptype == 'foundation' or apptype == 'mvg':
    apptype = string.split(app,'.')[0]
if id == 'null':
  os.chdir(cpfrom + '/%s-%s/SRPMS' % (app,bug))
else:
  os.chdir(cpfrom + '/%s-%s-%s/SRPMS' % (app,bug,id))
rpmname = os.popen('ls *%s*' % (apptype)).readlines()
for d in rpmname:
  dirname = string.replace(string.replace(string.strip(d),'hhl-'+apptype+'-',''),'.src.rpm','')
  print 'dirname = ' + dirname
os.chdir(cd)
if runtype == 'check':
  print 'checking %s in %s/updates...' % (dirname,dirname)
  os.system('ls -lR /mvista/ftp/arch/%s/updates%s' % (dir,dirname))

#big happy loop that does all our work
for dir in dirs.keys():
  if runtype == 'test':
    print 'making %s in %s/updates...' % (dirname,dir)
    if id == 'null':
      print 'copying %s/%s-%s/SRPMS to %s/updates/%s...' % (cpfrom,app,bug,dir,dirname)
      for subd in dirs[dir]:
        print 'copying %s/%s-%s/%s to %s/updates/%s...' % (cpfrom,app,bug,subd,dir,dirname)
    else:
      print 'copying %s/%s-%s-%s/SRPMS to %s/updates/%s...' % (cpfrom,app,bug,id,dir,dirname)
      for subd in dirs[dir]:
        print 'copying %s/%s-%s-%s/%s to %s/updates/%s...' % (cpfrom,app,bug,id,subd,dir,dirname)
  elif runtype == 'hosttest':
    print 'making %s in %s/updates...' % (dirname,dir)
    if id == 'null':
      print 'copying %s/%s-%s/SRPMS to %s/updates/%s...' % (cpfrom,app,bug,dir,dirname)
      print 'copying %s/%s-%s/host-tool to %s/updates/%s...' % (cpfrom,app,bug,dir,dirname)
    else:
      print 'copying %s/%s-%s-%s/SRPMS to %s/updates/%s...' % (cpfrom,app,bug,id,dir,dirname)
      print 'copying %s/%s-%s-%s/host-tool to %s/updates/%s...' % (cpfrom,app,bug,id,dir,dirname)
  elif runtype == 'copy':
    print "Copying Files for %s"%(dir)
    os.chdir('/mvista/ftp/arch/%s/updates' % (dir))
    os.system('mkdir -p %s' % (dirname))
    os.chdir(dirname)
    if id == 'null':
      os.system('cp -a %s/%s-%s/SRPMS .' % (cpfrom,app,bug))
      for subd in dirs[dir]:
        os.system('cp -a %s/%s-%s/%s .' % (cpfrom,app,bug,subd))
    else:
      os.system('cp -a %s/%s-%s-%s/SRPMS .' % (cpfrom,app,bug,id))
      for subd in dirs[dir]:
        os.system('cp -a %s/%s-%s-%s/%s .' % (cpfrom,app,bug,id,subd))

      #Automatically update manifest everytime we copy an update
      print "Updating manifest.xml..."
      os.chdir('/mvista/ftp/arch/%s/updates' % (dir))
      os.system('python /mvista/ftp/arch/updateManifest.py %s package'%(dirname))

  elif runtype == 'hostcopy':
    os.chdir('/mvista/ftp/arch/%s/updates' % (dir))
    os.system('mkdir -p %s' % (dirname))
    os.chdir(dirname)
    if id == 'null':
      os.system('cp -a %s/%s-%s/SRPMS .' % (cpfrom,app,bug))
      os.system('cp -a %s/%s-%s/host-tool .' % (cpfrom,app,bug))
    else:
      os.system('cp -a %s/%s-%s-%s/SRPMS .' % (cpfrom,app,bug,id))
      os.system('cp -a %s/%s-%s-%s/host .' % (cpfrom,app,bug,id))
  elif runtype == 'removetest':
    os.chdir('/mvista/ftp/arch/%s/updates' % (dir))
    os.system('ls  %s' % (dirname))
  elif runtype == 'remove':
    os.chdir('/mvista/ftp/arch/%s/updates' % (dir))
    os.system('ls  %s' % (dirname))
    os.system('rm -r %s ' % (dirname))
  if runtype == 'check':
    print 'checking %s in %s/updates...' % (dirname,dirname)
    os.system('ls -lR /mvista/ftp/arch/%s/updates/%s*' % (dir,app))
  os.chdir(cd)

