#!/usr/bin/env python
#
# This script attempts to count the number of physical cores on a system using /proc/cpuinfo and prints it to stdout.
# author: Henry Yei <hyei@mvista.com>
import sys, os

# Toggle DEBUG
DEBUG=0

try:
	handle=open('/proc/cpuinfo')
	cpuinfo_data=handle.read().splitlines()
	handle.close()
except IOError:
	sys.stderr.write('error when opening /proc/cpuinfo\n')
	print 1
	sys.exit(1)

# create a list of processor dictionary entries
proc_entries=[]
proc_entry={}

for line in cpuinfo_data:
	if line=='':
		proc_entries.append(proc_entry)
		proc_entry={}
		continue
	try:
		if DEBUG: print "[%s]"%line
		name, value=line.split(':',1)
		proc_entry[name.strip()]=value
	except ValueError:
		sys.stderr.write('unexpected data in /proc/cpuinfo\n')
		print 1
		sys.exit(1)
else:
	if not proc_entries:
		proc_entries.append(proc_entry)
	
list_phys_core=[]
for entry in proc_entries:
	if entry.has_key('physical id') and entry.has_key('core id'):
		entity=(entry['physical id'],entry['core id'])
	elif entry.has_key('physical id'):
		entity=(entry['physical id'],0)
	elif entry.has_key('processor'): 
		entity=(entry['processor'],0)
	else:
		sys.stderr.write('unknown cpu identifier\n')	
	if entity not in list_phys_core:
		list_phys_core.append(entity)
	
numcores=len(list_phys_core)
if numcores < 1:
	print 1
	sys.exit(1)
print numcores
sys.exit(0)
